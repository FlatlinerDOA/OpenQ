{
  "name": "typescript-require",
  "description": "Node.JS require extension to load TypeScript modules from JS",
  "homepage": "https://github.com/eknkc/typescript-require",
  "author": {
    "name": "Ekin Koc",
    "email": "ekin@eknkc.com"
  },
  "version": "0.2.2",
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:eknkc/typescript-require.git"
  },
  "dependencies": {
    "typescript": ">= 0.8.2"
  },
  "keywords": [
    "typescript",
    "require"
  ],
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "TypeScript Require Extension\n============================\n\nThis is a Node.JS `require` extension that enables requiring typescript modules without any preprocessing.\n\n# Install\nInstall via npm:\n\n    npm install typescript-require\n\n# Use\n\nDuring the boot up process of your application, require `typescript-require` once;\n\n    require('typescript-require');\n\nAfter this point, you can require any .ts module just like .js modules. `typescript-require` will find out\nand compile the TypeScript file, resolving any necessary dependencies to other scripts.\n\n# Sample\n\n#### app.js\n    // Initialize\n    require('typescript-require');\n\n    // Get functions.ts\n    var funcs = require(\"./funcs.ts\");\n    console.log(funcs.lowercase(\"HELLO!\"));\n\n#### funcs.ts\n    export function lowercase(val:string) {\n        return val.toLowerCase();\n    }\n\n    export function uppercase(val:string) {\n        return val.toUpperCase();\n    }\n\n# Configuration\nIt is possible to configure the require extension upon initialization:\n\n    // Initialize\n    require('typescript-require')({\n        nodeLib: false,\n        targetES5: true\n    });\n\n### nodeLib [boolean] default: false\nIf **true** `node.d.ts` definitions file is loaded before custom ts files. This is disabled by default and you should use\n\n    ///<reference path='node.d.ts'/>\n\nat the beginning of your ts modules.\n\n### targetES5 [boolean] default: true\nTarget ES5 / ES3 output mode.\n\n# Module Dependencies in TS files\nYou can load any other TypeScript or Javascript module from your typescripts. However, you should\nuse different methods for different modules\n\n### sample.ts\nGiven that there are two files, `foomodule.js` and `barmodule.ts` at the same directory as sample.ts\n\n    ///<reference path='node.d.ts'/>\n\n    // Load a JavaScript module with standard Node.JS require\n    var foomodule = require('./foomodule.js');\n\n    // Load a TypeScript module with TypeScript module syntax\n    import barmodule = module('barmodule');\n    ```\nNote that the second one essentially gets compiled to a `require` call just like the first one. However,\n`import ... module` syntax makes it possible to use TyepScript compile time validation features (like type checking).\n\nDeveloped By\n============\n\nEkin Koc - <ekin@eknkc.com>\n\nLicense\n=======\n\n    Copyright 2012 Ekin Koc\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n",
  "readmeFilename": "README.md",
  "_id": "typescript-require@0.2.2",
  "_from": "typescript-require@"
}
