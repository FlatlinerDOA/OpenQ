{
  "name": "rx",
  "title": "Reactive Extensions for JavaScript (RxJS)",
  "description": "Library for composing asynchronous and event-based operations in JavaScript",
  "version": "2.1.2",
  "homepage": "http://rx.codeplex.com",
  "author": {
    "name": "Cloud Programmability Team",
    "url": "https://github.com/Reactive-Extensions/RxJS/blob/master/authors.txt"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Reactive-Extensions/RxJS.git"
  },
  "licenses": [
    {
      "type": "Apache License, Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-uglify": "*",
    "grunt-contrib-concat": "*",
    "grunt-contrib-qunit": "*"
  },
  "keywords": [],
  "main": "rx.node.js",
  "readme": "# The Reactive Extensions for JavaScript... #\r\n*...is a set of libraries to compose asynchronous and event-based programs using observable collections and LINQ-style query operators in JavaScript*\r\n\r\nThis project has moved to [CodePlex](http://rx.codeplex.com/) and only serves as a mirror.\r\n\r\n## About the Reactive Extensions ##\r\n\r\nThe Reactive Extensions for JavaScript (RxJS) is a set of libraries for composing asynchronous and event-based programs using observable sequences and LINQ-style query operators in JavaScript. Using RxJS, developers represent asynchronous data streams with Observables, query asynchronous data streams using LINQ operators, and parameterize the concurrency in the asynchronous data streams using Schedulers. Simply put, RxJS = Observables + LINQ + Schedulers.\r\n\r\nWhether you are authoring a web-based application in JavaScript or a server-side application in Node.js, you have to deal with asynchronous and event-based programming as a matter of course. Although some patterns are emerging such as the Promise pattern, handling exceptions, cancellation, and synchronization is difficult and error-prone.\r\n\r\nUsing RxJS, you can represent multiple asynchronous data streams (that come from diverse sources, e.g., stock quote, tweets, computer events, web service requests, etc.), and subscribe to the event stream using the Observer object. The Observable notifies the subscribed Observer instance whenever an event occurs.\r\n\r\nBecause observable sequences are data streams, you can query them using standard LINQ query operators implemented by the Observable type. Thus you can filter, project, aggregate, compose and perform time-based operations on multiple events easily by using these static LINQ operators. In addition, there are a number of other reactive stream specific operators that allow powerful queries to be written. Cancellation, exceptions, and synchronization are also handled gracefully by using the methods on the Observable object.\r\n\r\nThis set of libraries include:\r\n\r\n- **rx.js** - Core library\r\n- **rx.aggregates.js** - aggregation event processing query operations\r\n- **rx.binding.js** - binding operators including multicast, publish, publishLast, publishValue, and replay\r\n- **rx.coincidence.js** - reactive coincidence join event processing query operations\r\n- **rx.experimental.js** - experimental operators including imperative operators and forkJoin\r\n- **rx.joinpatterns.js** - join patterns event processing query operations\r\n- **rx.testing.js** - used to write unit tests for complex event processing queries.\r\n- **rx.time.js** - time-based event processing query operations.\r\n\r\n## Getting Started ##\r\n\r\nComing Soon\r\n\r\n##  API Documentation ##\r\n\r\nCore:\r\n\r\n- Observer\r\n- [Observable](https://github.com/Reactive-Extensions/RxJS/wiki/Observable)\r\n\r\nSubjects:\r\n\r\n - AsyncSubject\r\n - BehaviorSubject\r\n - ReplaySubject\r\n - Subject\r\n\r\nSchedulers:\r\n\r\n- Scheduler object\r\n- Scheduler.currentThread\r\n- Scheduler.immediate\r\n- Scheduler.timeout\r\n- VirtualTimeScheduler\r\n\r\nDisposables:\r\n\r\n- CompositeDisposable\r\n- Disposable\r\n- RefCountDisposable\r\n- SerialDisposable\r\n- SingleAssignmentDisposable\r\n\r\n\r\n\r\n## Installation and Usage ##\r\n\r\nThere are multiple ways of getting started with the Reactive Extensions including:\r\n\r\nIn a Browser:\r\n\r\n    <script src=\"rx.js\"></script>\r\n\r\nAlong with a number of our extras for RxJS:\r\n    \r\n    <script src=\"rx.aggregates.js\"></script>\r\n    <script src=\"rx.binding.js\"></script>\r\n    <script src=\"rx.coincidencejs\"></script>\r\n    <script src=\"rx.experimental.js\"></script>\r\n    <script src=\"rx.joinpatterns.js\"></script>\r\n    <script src=\"rx.testing.js\"></script>\r\n    <script src=\"rx.time.js\"></script>\r\n\r\nInstalling via NPM:\r\n\r\n    npm install rxjs\r\n    npm install -g rxjs\r\n\r\nUsing in Node.js:\r\n\r\n    var Rx = require('rx');\r\n\r\nInstalling all of RxJS via NuGet:\r\n\r\n    Install-Package RxJS-All\r\n\r\nOr install via NuGet individual packages:\r\n\r\n    Install-Package RxJS-Main\r\n    Install-Package RxJS-Aggregates\r\n    Install-Package RxJS-Binding\r\n    Install-Package RxJS-Coincidence\r\n    Install-Package RxJS-Experimental\r\n    Install-Package RxJS-JoinPatterns\r\n    Install-Package RxJS-Testing\r\n    Install-Package RxJS-Time\r\n\r\nUsing RxJS with an AMD loader such as Require.js\r\n\r\n    require({\r\n        'paths': {\r\n            'rx': 'path/to/rx.js'\r\n        }\r\n    },\r\n    ['rx'], function(Rx) {\r\n        var obs = Rx.Observable.returnValue(42);\r\n        obs.subscribe(function (x) { console.log(x); });\r\n    });\r\n\r\n## Compatibility ##\r\n\r\nRxJS has been thoroughly tested against all major browsers and supports IE6+, Chrome 4+, FireFox 1+, and Node.js v0.4+. \r\n\r\n## License ##\r\n\r\n\r\nCopyright (c) Microsoft Open Technologies, Inc.  All rights reserved.\r\nMicrosoft Open Technologies would like to thank its contributors, a list\r\nof whom are at http://rx.codeplex.com/wikipage?title=Contributors.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you\r\nmay not use this file except in compliance with the License. You may\r\nobtain a copy of the License at\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\nimplied. See the License for the specific language governing permissions\r\nand limitations under the License.",
  "readmeFilename": "readme.md",
  "_id": "rx@2.1.2",
  "dist": {
    "shasum": "fb9e1f44101c9879e101a057939c28cd30d006e2"
  },
  "_from": "rx@",
  "_resolved": "https://registry.npmjs.org/rx/-/rx-2.1.2.tgz"
}
